name: "Build Go GUI App"
description: "Build Go GUI application for multiple platforms"

inputs:
  go-version:
    description: "Go version to use"
    required: false
    default: "1.24"

outputs:
  artifacts:
    description: "List of built artifacts"
    value: ${{ steps.artifacts.outputs.list }}

runs:
  using: "composite"
  steps:
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ inputs.go-version }}

    - name: Install GUI dependencies (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgtk-3-dev \
          libdbusmenu-glib-dev \
          libayatana-appindicator3-dev \
          libayatana-indicator3-dev

    - name: Build Linux Binary
      if: runner.os == 'Linux'
      shell: bash
      run: |
        export CGO_ENABLED=1
        go build -ldflags="-s -w" -o file-fusion-rename-linux main.go

    - name: Build Windows Binary
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        set CGO_ENABLED=1
        go build -ldflags="-s -w" -o file-fusion-rename-windows.exe main.go

    - name: Build macOS Binary (Intel)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        export CGO_ENABLED=1
        export GOARCH=amd64
        go build -ldflags="-s -w" -o file-fusion-rename-macos-intel main.go
        codesign --force --deep --sign - file-fusion-rename-macos-intel

    - name: Build macOS Binary (ARM64)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        export CGO_ENABLED=1
        export GOARCH=arm64
        go build -ldflags="-s -w" -o file-fusion-rename-macos-arm64 main.go
        codesign --force --deep --sign - file-fusion-rename-macos-arm64

    - name: Package macOS App Bundle
      if: runner.os == 'macOS'
      shell: bash
      run: |
        set -e
        echo "Building macOS app bundle..."

        # Verify ARM64 binary exists
        if [ ! -f "file-fusion-rename-macos-arm64" ]; then
          echo "Error: ARM64 binary not found"
          exit 1
        fi

        echo "ARM64 binary size: $(ls -lh file-fusion-rename-macos-arm64 | awk '{print $5}')"

        # Create app bundle structure
        echo "Creating app bundle structure..."
        mkdir -p "File Fusion Rename.app/Contents/MacOS"
        mkdir -p "File Fusion Rename.app/Contents/Resources"

        # Copy ARM64 binary as the main executable (most Macs are ARM64 now)
        echo "Copying ARM64 binary to app bundle..."
        cp file-fusion-rename-macos-arm64 "File Fusion Rename.app/Contents/MacOS/File Fusion Rename"
        chmod +x "File Fusion Rename.app/Contents/MacOS/File Fusion Rename"

        # Create Info.plist
        echo "Creating Info.plist..."
        cat > "File Fusion Rename.app/Contents/Info.plist" << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>CFBundleExecutable</key>
          <string>File Fusion Rename</string>
          <key>CFBundleIdentifier</key>
          <string>com.davidkk.file-fusion-rename</string>
          <key>CFBundleName</key>
          <string>File Fusion Rename</string>
          <key>CFBundleVersion</key>
          <string>1.0.0</string>
          <key>CFBundleShortVersionString</key>
          <string>1.0.0</string>
          <key>CFBundlePackageType</key>
          <string>APPL</string>
          <key>LSUIElement</key>
          <true/>
        </dict>
        </plist>
        EOF

        # Verify app bundle structure
        echo "Verifying app bundle structure..."
        ls -la "File Fusion Rename.app/Contents/"
        ls -la "File Fusion Rename.app/Contents/MacOS/"

        # Sign the app bundle
        echo "Signing app bundle..."
        codesign --force --deep --sign - "File Fusion Rename.app" || echo "Code signing failed, continuing..."

        echo "macOS app bundle created successfully!"
        echo "Final verification - app bundle exists: $([ -d 'File Fusion Rename.app' ] && echo 'YES' || echo 'NO')"

    - name: Upload Linux Artifact
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v4
      with:
        name: file-fusion-rename-linux
        path: file-fusion-rename-linux

    - name: Upload Windows Artifact
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: file-fusion-rename-windows
        path: file-fusion-rename-windows.exe

    - name: Upload macOS Intel Artifact
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v4
      with:
        name: file-fusion-rename-macos-intel
        path: file-fusion-rename-macos-intel

    - name: Upload macOS ARM64 Artifact
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v4
      with:
        name: file-fusion-rename-macos-arm64
        path: file-fusion-rename-macos-arm64

    - name: Upload macOS App Bundle
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v4
      with:
        name: File-Fusion-Rename-macOS-App
        path: File Fusion Rename.app

    - name: Verify macOS App Bundle Upload
      if: runner.os == 'macOS'
      shell: bash
      run: |
        echo "Verifying macOS app bundle before upload..."
        if [ -d "File Fusion Rename.app" ]; then
          echo "✅ App bundle directory exists"
          echo "App bundle size: $(du -sh "File Fusion Rename.app" | cut -f1)"
          echo "App bundle contents:"
          find "File Fusion Rename.app" -type f | head -10
        else
          echo "❌ App bundle directory not found!"
          exit 1
        fi

    - name: Set artifacts output
      id: artifacts
      shell: bash
      run: |
        if [ "$RUNNER_OS" = "Linux" ]; then
          echo "list=file-fusion-rename-linux" >> $GITHUB_OUTPUT
        elif [ "$RUNNER_OS" = "Windows" ]; then
          echo "list=file-fusion-rename-windows.exe" >> $GITHUB_OUTPUT
        elif [ "$RUNNER_OS" = "macOS" ]; then
          echo "list=file-fusion-rename-macos-intel,file-fusion-rename-macos-arm64,File-Fusion-Rename-macOS-App" >> $GITHUB_OUTPUT
        fi
