name: "Tag and Release"
description: "Automatically create version tag and GitHub release"

inputs:
  github-token:
    description: "GitHub token"
    required: true
  version-bump:
    description: "Version bump type"
    required: false
    default: "patch"
  artifacts:
    description: "Comma-separated list of artifacts to include in release"
    required: true
  release-type:
    description: "Release type: auto only"
    required: false
    default: "auto"
  use-hash:
    description: "Whether to use hash for version"
    required: false
    default: "true"

outputs:
  tag:
    description: "Created tag"
    value: ${{ steps.outputs.outputs.tag }}
  changelog:
    description: "Generated changelog"
    value: ${{ steps.outputs.outputs.changelog }}
  should-release:
    description: "Whether release should proceed"
    value: ${{ steps.outputs.outputs.should_release }}

runs:
  using: "composite"
  steps:
    - name: Get commit hash
      id: hash
      shell: bash
      run: |
        echo "short_sha=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
        echo "full_sha=$GITHUB_SHA" >> $GITHUB_OUTPUT

    - name: Check existing tag
      id: existing_tag
      shell: bash
      run: |
        existing_tag=$(git tag --points-at HEAD)
        if [ -n "$existing_tag" ]; then
          echo "tag=$existing_tag" >> $GITHUB_OUTPUT
          echo "has_tag=true" >> $GITHUB_OUTPUT
        else
          echo "tag=" >> $GITHUB_OUTPUT
          echo "has_tag=false" >> $GITHUB_OUTPUT
        fi

    - name: Bump version and push tag
      id: auto_tag
      if: github.ref_name == 'main' && steps.existing_tag.outputs.has_tag == 'false'
      uses: anothrNick/github-tag-action@1.67.0
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        WITH_V: true
        DEFAULT_BUMP: ${{ inputs.version-bump }}
        RELEASE_BRANCHES: main
        DRY_RUN: false
        VERBOSE: true
        INITIAL_VERSION: "1.0.0"
        TAG_CONTEXT: branch

    - name: Set outputs
      id: outputs
      shell: bash
      run: |
        if [ "${{ steps.existing_tag.outputs.has_tag }}" = "true" ]; then
          # 如果已有TAG，直接使用
          version_tag="${{ steps.existing_tag.outputs.tag }}"
          changelog="Release using existing tag ${{ steps.existing_tag.outputs.tag }}"
        else
          # 自动触发：使用哈希值
          if [ "${{ steps.auto_tag.outputs.tag }}" != "" ]; then
            base_version="${{ steps.auto_tag.outputs.tag }}"
          else
            base_version="v1.0.0"
          fi
          version_tag="${base_version}-alpha.${{ steps.hash.outputs.short_sha }}"
          changelog="${{ steps.auto_tag.outputs.changelog }}"
        fi

        echo "tag=${version_tag}" >> $GITHUB_OUTPUT
        echo "changelog=${changelog}" >> $GITHUB_OUTPUT
        echo "should_release=true" >> $GITHUB_OUTPUT
        echo "hash=${{ steps.hash.outputs.short_sha }}" >> $GITHUB_OUTPUT

    - name: Download artifacts
      if: steps.outputs.outputs.should_release == 'true'
      uses: actions/download-artifact@v4
      with:
        path: ./release

    - name: Create GitHub Release
      if: steps.outputs.outputs.should_release == 'true' && steps.outputs.outputs.tag != ''
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.outputs.outputs.tag }}
        name: Release ${{ steps.outputs.outputs.tag }}
        body: |
          ## 🚀 Release ${{ steps.outputs.outputs.tag }}

          ### 📋 Release Info
          - **Release Type**: 自动发布 (Auto)
          - **Commit Hash**: ${{ steps.outputs.outputs.hash }}
          - **Version Strategy**: 哈希值版本

          ### ✨ What's New
          ${{ steps.outputs.outputs.changelog }}

          ### 📦 Downloads
          - **Linux**: file-fusion-rename-linux
          - **Windows**: file-fusion-rename-windows.exe  
          - **macOS (Intel)**: file-fusion-rename-macos-intel
          - **macOS (Apple Silicon)**: file-fusion-rename-macos-arm64

          ### 🔧 Installation
          1. Download the appropriate binary for your platform
          2. Make it executable (Linux/macOS): `chmod +x file-fusion-rename-*`
          3. Run the application

          ### 📝 Changelog
          For detailed changes, see the commit history.
        files: |
          ./release/file-fusion-rename-linux/file-fusion-rename-linux
          ./release/file-fusion-rename-windows/file-fusion-rename-windows.exe
          ./release/file-fusion-rename-macos-intel/file-fusion-rename-macos-intel
          ./release/file-fusion-rename-macos-arm64/file-fusion-rename-macos-arm64
        draft: false
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
